---
import { getLangFromUrl, useTranslations } from '../utils/i18n';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<section id="contacto" class="section bg-dark-lighter">
  <div class="container-custom">
    <h2 class="text-4xl md:text-5xl font-bold text-center mb-12">
      {t('contact.title')} <span class="gradient-text">{t('contact.titleHighlight')}</span>
    </h2>
    
    <div class="max-w-6xl mx-auto">
      <p class="text-xl text-gray-300 text-center mb-12">
        {t('contact.subtitle')}
      </p>

      <div class="grid lg:grid-cols-2 gap-12">
        <!-- Formulario de Contacto -->
        <div class="card">
          <h3 class="text-2xl font-bold mb-6">{t('contact.formTitle')}</h3>
          
          <form id="contact-form" class="space-y-6">
            <div>
              <label for="name" class="block text-sm font-medium text-gray-300 mb-2">
                {t('contact.name')} *
              </label>
              <input
                type="text"
                id="name"
                name="name"
                required
                class="w-full px-4 py-3 bg-dark border border-gray-700 rounded-lg text-white placeholder-gray-500 focus:outline-none focus:border-primary transition-colors"
                placeholder={t('contact.placeholders.name')}
              />
            </div>

            <div>
              <label for="email" class="block text-sm font-medium text-gray-300 mb-2">
                {t('contact.email')} *
              </label>
              <input
                type="email"
                id="email"
                name="email"
                required
                class="w-full px-4 py-3 bg-dark border border-gray-700 rounded-lg text-white placeholder-gray-500 focus:outline-none focus:border-primary transition-colors"
                placeholder={t('contact.placeholders.email')}
              />
            </div>

            <div>
              <label for="phone" class="block text-sm font-medium text-gray-300 mb-2">
                {t('contact.phone')}
              </label>
              <input
                type="tel"
                id="phone"
                name="phone"
                class="w-full px-4 py-3 bg-dark border border-gray-700 rounded-lg text-white placeholder-gray-500 focus:outline-none focus:border-primary transition-colors"
                placeholder={t('contact.placeholders.phone')}
              />
            </div>

            <div>
              <label for="subject" class="block text-sm font-medium text-gray-300 mb-2">
                {t('contact.subject')} *
              </label>
              <input
                type="text"
                id="subject"
                name="subject"
                required
                class="w-full px-4 py-3 bg-dark border border-gray-700 rounded-lg text-white placeholder-gray-500 focus:outline-none focus:border-primary transition-colors"
                placeholder={t('contact.placeholders.subject')}
              />
            </div>

            <div>
              <label for="message" class="block text-sm font-medium text-gray-300 mb-2">
                {t('contact.message')} *
              </label>
              <textarea
                id="message"
                name="message"
                required
                rows="5"
                class="w-full px-4 py-3 bg-dark border border-gray-700 rounded-lg text-white placeholder-gray-500 focus:outline-none focus:border-primary transition-colors resize-none"
                placeholder={t('contact.placeholders.message')}
              ></textarea>
            </div>

            <div id="form-message" class="hidden p-4 rounded-lg"></div>

            <button
              type="submit"
              class="btn-primary w-full justify-center flex items-center gap-2"
            >
              <span id="button-text">{t('contact.send')}</span>
              <svg id="button-icon" class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
              </svg>
              <svg id="button-loading" class="hidden w-5 h-5 animate-spin" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
            </button>
          </form>
        </div>

        <!-- Informaci√≥n de Contacto -->
        <div class="space-y-6">
          <div class="card">
            <h3 class="text-2xl font-bold mb-6">{t('contact.infoTitle')}</h3>
            
            <div class="space-y-4">
              <a 
                href="mailto:pablooalcaldegarcia@gmail.com"
                class="flex items-start gap-4 p-4 rounded-lg hover:bg-dark transition-colors group"
              >
                <div class="text-3xl group-hover:scale-110 transition-transform">üìß</div>
                <div>
                  <h4 class="font-semibold text-white mb-1">{t('contact.info.email')}</h4>
                  <p class="text-gray-400 text-sm break-all group-hover:text-primary transition-colors">
                    pablooalcaldegarcia@gmail.com
                  </p>
                </div>
              </a>

              <a 
                href="tel:+34687361991"
                class="flex items-start gap-4 p-4 rounded-lg hover:bg-dark transition-colors group"
              >
                <div class="text-3xl group-hover:scale-110 transition-transform">üì±</div>
                <div>
                  <h4 class="font-semibold text-white mb-1">{t('contact.info.phone')}</h4>
                  <p class="text-gray-400 text-sm group-hover:text-primary transition-colors">
                    687 361 991
                  </p>
                </div>
              </a>

              <a 
                href="https://wa.me/34687361991"
                target="_blank"
                rel="noopener noreferrer"
                class="flex items-start gap-4 p-4 rounded-lg hover:bg-dark transition-colors group"
              >
                <div class="text-3xl group-hover:scale-110 transition-transform">üí¨</div>
                <div>
                  <h4 class="font-semibold text-white mb-1">{t('contact.info.whatsapp')}</h4>
                  <p class="text-gray-400 text-sm group-hover:text-primary transition-colors">
                    {t('contact.info.whatsappText')}
                  </p>
                </div>
              </a>

              <a 
                href="https://www.linkedin.com/in/pabloalcaldegarcia"
                target="_blank"
                rel="noopener noreferrer"
                class="flex items-start gap-4 p-4 rounded-lg hover:bg-dark transition-colors group"
              >
                <div class="text-3xl group-hover:scale-110 transition-transform">üíº</div>
                <div>
                  <h4 class="font-semibold text-white mb-1">{t('contact.info.linkedin')}</h4>
                  <p class="text-gray-400 text-sm group-hover:text-primary transition-colors">
                    /pabloalcaldegarcia
                  </p>
                </div>
              </a>

              <div class="flex items-start gap-4 p-4 rounded-lg">
                <div class="text-3xl">üìç</div>
                <div>
                  <h4 class="font-semibold text-white mb-1">{t('contact.info.location')}</h4>
                  <p class="text-gray-400 text-sm">
                    {t('contact.info.locationText')}
                  </p>
                </div>
              </div>
            </div>
          </div>

          <!-- CTA Card -->
          <div class="card bg-gradient-to-br from-primary/10 to-secondary/10 border-primary/30">
            <h3 class="text-xl font-bold mb-3">{t('contact.directContact.title')}</h3>
            <p class="text-gray-300 mb-4 text-sm">
              {t('contact.directContact.description')}
            </p>
            <div class="flex flex-col sm:flex-row gap-3">
              <a 
                href="mailto:pablooalcaldegarcia@gmail.com"
                class="btn-primary text-sm"
              >
                {t('contact.directContact.email')}
              </a>
              <a 
                href="https://www.linkedin.com/in/pabloalcaldegarcia"
                target="_blank"
                rel="noopener noreferrer"
                class="btn-outline text-sm"
              >
                {t('contact.directContact.linkedin')}
              </a>
            </div>
          </div>

          <!-- Disponibilidad -->
          <div class="card">
            <div class="flex items-center gap-3 mb-3">
              <div class="w-3 h-3 bg-green-500 rounded-full animate-pulse"></div>
              <h3 class="text-lg font-bold">{t('contact.availability.title')}</h3>
            </div>
            <p class="text-gray-400 text-sm">
              {t('contact.availability.description')}
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script define:vars={{ t_sending: t('contact.sending'), t_send: t('contact.send'), t_success: t('contact.success'), t_error: t('contact.error') }}>
  const form = document.getElementById('contact-form');
  const formMessage = document.getElementById('form-message');
  const buttonText = document.getElementById('button-text');
  const buttonIcon = document.getElementById('button-icon');
  const buttonLoading = document.getElementById('button-loading');

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();

    // Mostrar estado de carga
    if (buttonText) buttonText.textContent = t_sending;
    buttonIcon?.classList.add('hidden');
    buttonLoading?.classList.remove('hidden');
    formMessage?.classList.add('hidden');

    const formData = new FormData(form);
    const data = {
      name: formData.get('name'),
      email: formData.get('email'),
      phone: formData.get('phone'),
      subject: formData.get('subject'),
      message: formData.get('message'),
    };

    try {
      // Usando Formspree
      const response = await fetch('https://formspree.io/f/mjkrrrky', {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      });

      if (response.ok) {
        // √âxito
        if (formMessage) {
          formMessage.textContent = t_success;
          formMessage.className = 'p-4 rounded-lg bg-green-500/20 border border-green-500 text-green-400';
          formMessage.classList.remove('hidden');
        }
        form.reset();
      } else {
        const result = await response.json();
        throw new Error(result.error || 'Error al enviar el mensaje');
      }
    } catch (error) {
      // Error
      if (formMessage) {
        formMessage.textContent = t_error;
        formMessage.className = 'p-4 rounded-lg bg-red-500/20 border border-red-500 text-red-400';
        formMessage.classList.remove('hidden');
      }
      console.error('Error:', error);
    } finally {
      // Restaurar bot√≥n
      if (buttonText) buttonText.textContent = t_send;
      buttonIcon?.classList.remove('hidden');
      buttonLoading?.classList.add('hidden');
    }
  });
</script>

