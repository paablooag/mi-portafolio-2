---
import Layout from '../../../layouts/Layout.astro';
import Header from '../../../components/Header.astro';
import Footer from '../../../components/Footer.astro';
import FloatingButtons from '../../../components/FloatingButtons.astro';
import { getCollection } from 'astro:content';
import { getLangFromUrl, useTranslations } from '../../../utils/i18n';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const allPosts = await getCollection('blog', ({ data }) => {
  return data.draft !== true;
});

const sortedPosts = allPosts.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

function formatDate(date: Date): string {
  return new Date(date).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}
---

<Layout 
  title="Blog - Pablo Alcalde | Frontend & SEO | Articles about Vue.js, Nuxt.js and Web Development"
  description="Articles about frontend development, Vue.js, Nuxt.js, SEO and the latest trends in web technology. Real development experiences at Wegow and best practices."
  tags={["blog", "frontend development", "Vue.js", "Nuxt.js", "SEO", "JavaScript", "TypeScript", "tutorials", "best practices"]}
  lang="en"
>
  <Header />
  
  <main class="pt-24">
    <section class="section">
      <div class="container-custom">
        <!-- Blog Hero -->
        <div class="text-center mb-16">
          <h1 class="text-5xl md:text-6xl font-bold mb-4">
            {t('blog.title')} <span class="gradient-text">{t('blog.titleHighlight')}</span>
          </h1>
          <p class="text-xl text-gray-400 max-w-2xl mx-auto">
            {t('blog.subtitle')}
          </p>
        </div>

        <!-- Articles Grid -->
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {sortedPosts.map((post) => (
            <article class="card group hover:scale-[1.02] transition-all duration-300">
              <div class="mb-4">
                <div class="flex flex-wrap gap-2 mb-3">
                  {post.data.tags.map((tag) => (
                    <span class="text-xs px-3 py-1 bg-primary/20 text-primary rounded-full">
                      {tag}
                    </span>
                  ))}
                </div>
                <h2 class="text-xl font-bold text-white mb-2 group-hover:text-primary transition-colors">
                  <a href={`/en/blog/${post.slug}`}>
                    {post.data.title}
                  </a>
                </h2>
                <p class="text-gray-400 text-sm mb-3">
                  {post.data.description}
                </p>
                <div class="flex items-center gap-2 text-gray-500 text-xs mb-4">
                  <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"></path>
                  </svg>
                  <time datetime={post.data.pubDate.toISOString()}>
                    {formatDate(post.data.pubDate)}
                  </time>
                </div>
              </div>
              <a 
                href={`/en/blog/${post.slug}`}
                class="inline-flex items-center gap-2 text-primary hover:gap-3 transition-all duration-300"
              >
                {t('blog.readMore')}
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
              </a>
            </article>
          ))}
        </div>

        <!-- Message if no posts -->
        {sortedPosts.length === 0 && (
          <div class="card text-center py-12">
            <p class="text-gray-400 text-lg">
              New articles coming soon. Check back later!
            </p>
          </div>
        )}
      </div>
    </section>
  </main>

  <Footer />
  <FloatingButtons />
</Layout>

